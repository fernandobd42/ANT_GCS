<?xml version="1.0" ?>
<!--Name recebe o nome do projeto, default recebe o último target a ser executado, 
basedir recebe o diretório onde irá executar o build-->
<project name="web2aps1ra1652745" default="build" basedir=".">  
	
	<!--target delete -->
	<target name="delete"> 
		<delete dir="bin" /> <!--deleta o diretório bin -->
		<delete dir="src" /> <!--deleta o diretório src --> 
		<delete dir="res" /> <!--deleta o diretório lib -->
		<delete dir="war" /> <!--deleta o diretório jar -->
		<delete dir="lib" /> <!--deleta o diretório lib -->
		<delete dir="dist" /> <!--deleta o diretório dist -->
	</target>
	
	<!--target create depende do target delete -->
	<target name="create" depends="delete"> 
		<mkdir dir="bin" /> <!--cria o diretório bin -->
		<mkdir dir="src" /> <!--cria o diretório src -->
		<mkdir dir="res" /> <!--cria o diretório res -->
    	<mkdir dir="war" /> <!--cria o diretório jar -->
       	<mkdir dir="lib" /> <!--cria o diretório lib -->
		<mkdir dir="dist" /> <!--cria o diretório dist -->
	</target>
	
	<!--target copy depende do target create -->
	<target name="copy" depends="create"> 
		<!--cópia para o diretório WEB/build/src-->
		<copy todir="./src"> 
			<!--todos os pacotes do WEB/src -->
			<fileset dir="../src" /> 
		</copy>
		
		<!--cópia para o diretório WEB/build/res-->
		<copy todir="./res"> 
			<!--todos os pacotes do WEB/res -->
			<fileset dir="../res" ></fileset>
		</copy>
			
		<!--cópia para o diretório WEB/build/lib-->
		<copy todir="./lib"> 
			<!--todos os pacotes do WEB/WebContent/WEB-INF/lib-->
			<fileset dir="../WebContent/WEB-INF/lib" ></fileset>
			
		</copy>	
	</target>
	
	
	<!-- Determina o caminho das dependencias -->
	<path id="classpath"> 
		<fileset dir="./lib"> 
		<include name="*.jar"/> </fileset> 
		<fileset dir="../WebContent/WEB-INF/" excludes="**/lib/**"> 
		<include name="*.xml"/> </fileset> 
	</path>
	
	
	<!--target compila depende do target copy -->
	<target name="compile" depends="copy">
		<!-- includeantruntime é necessário para compilar o código.
		Compila os arquivos .java do WEB/build/src e salva os arquivos .class no WEB/build/bin -->
		<javac includeantruntime="true" srcdir="./src/br/com" 
			destdir="./bin" classpathref="classpath">
		</javac>
	</target>
			

	<!--target build depende do target compile -->
	<target name="build" depends="compile">
		<!--cria o diretório dist -->		
		<mkdir dir="dist" /> 
		
		<!--cópia para o diretório WEB/build/dist-->
		<copy todir="./dist"> 
			<!--todos os pacotes do WEB/WebContent-->
			<fileset dir="../WebContent" ></fileset>
		</copy>	
		
 	 	<!--cria o diretório classes em dist/WEB-INF -->
		<mkdir dir="./dist/WEB-INF/classes" /> 

		<!--cópia para o diretório WEB/build/dist/WEB-INF/classes-->
		<copy todir="./dist/WEB-INF/classes"> 
			<!--todos as dependências que estão em WEB/build/res-->
			<fileset dir="./res/" ></fileset>
		</copy>
		
		<!--cópia para o diretório WEB/build/dist/WEB-INF/classes-->
		<copy todir="./dist/WEB-INF/classes"> 
			<!--todos os arquivos .class que estão em WEB/build/bin-->
			<fileset dir="./bin/" ></fileset>
		</copy>	
	</target>
	
	<!--target war depende do target compile -->
   	<target name="war" depends="build"> 
		<!--compacta todos arquivos do WEB/build/bin/br/com e gera o WEB.war no WEB/jar -->
     		<war destfile="./war/WEB.war" basedir="dist" webxml="../WebContent/WEB-INF/web.xml">
    		</war>
	</target>
	
	
	<!--target deploy, sobe o war para produção -->
	<target name="deploy" depends="war">
 		<!-- exclui o diretório atual -->
		<delete dir="/etc/tomcat7/webapps/WEB" />
 		<!-- exclui o .war atual -->
		<delete file="/etc/tomcat7/webapps/WEB.war"/>
		
		<!-- envia para o diretorio do servidor -->
		<copy todir="/etc/tomcat7/webapps"> 
			<!--todos os pacotes do WEB/jar, no caso o WEB.war-->
			<fileset dir="./war" ></fileset>
		</copy>	
	</target>
</project>
